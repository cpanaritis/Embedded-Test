package ca.mcgill.ecse321.embeddedtest;

import org.junit.Test;

import ca.mcgill.mobeewave.embeddedtest.model.CommandAPDU;

import static ca.mcgill.mobeewave.embeddedtest.model.CommandAPDU.isValid;
import static ca.mcgill.mobeewave.embeddedtest.model.TLV.parseTLVStream;
import static org.junit.Assert.assertEquals;

/**
 * Parsed Stream for TLV
 * @author Christos Panaritis
 */
public class ParseStreamTest {
    @Test
    public void parseStream() throws Exception {
        byte data[] = new byte[]{(byte) 0x61, 0x0A ,0x4F ,0x08 , (byte)0xA0 ,0x00 ,0x00 ,0x01 ,0x51 ,0x00 ,0x00 ,0x00
                ,0x61 ,0x0E ,0x4F,0x0C , (byte)0xA0 ,0x00 ,0x00 ,0x01 ,0x51 ,0x53 ,0x50 ,0x41 ,0x53 ,0x4B ,0x4D ,0x53
                ,0x61,0x10 ,0x4F  ,0x0E ,(byte)0xA0 ,0x00 ,0x00 ,0x01 ,0x51 ,0x53 ,0x50 ,0x41,0x4C ,0x43 ,0x43 ,0x4D,0x41 ,0x4D
                ,0x61 ,0x0F ,0x4F ,0x0D ,(byte)0xA0 ,0x00 ,0x00 ,0x01 ,0x51 ,0x53 ,0x50 ,0x41 ,0x53 ,0x33 ,0x53 ,0x53 ,0x44
                ,0x61 ,0x0C,0x4F ,0x0A ,(byte)0xA9 ,(byte)0xA8 ,(byte)0xA7 ,(byte)0xA6 ,(byte)0xA5 ,(byte)0xA4 ,(byte)0xA3 ,(byte)0xA2  ,(byte)0xA1 ,(byte)0xA0
                ,0x61 ,0x0C ,0x4F ,0x0A ,(byte)0xA9 ,(byte)0xA8 ,(byte)0xA7,(byte)0xA6 ,(byte)0xA5 ,(byte)0xA4 ,(byte)0xA3 ,(byte)0xA2 ,(byte)0xA1 ,(byte)0xA1
                ,0x61 ,0x0E ,0x4F ,0x0C ,(byte)0xA0 ,0x00 ,0x00 ,0x00 ,0x03 ,0x53 ,0x50 ,0x42 ,0x00 ,0x01 ,0x42,0x01
                ,0x61 ,0x0E ,0x4F ,0x0C ,(byte)0xA0 ,0x00 ,0x00 ,0x01 ,0x51 ,0x53 ,0x50 ,0x43 ,0x41 ,0x53 ,0x44 ,0x00
                ,0x61 ,0x0B ,0x4F ,0x09 ,(byte)0xA0 ,0x00 ,0x00 ,0x01 ,0x51,0x41 ,0x43 ,0x4C ,0x00
                ,0x61  ,0x12 ,0x4F ,0x10 ,(byte)0xA0 ,0x00 ,0x00 ,0x00 ,0x77 ,0x01 ,0x07 ,(byte)0x82 ,0x1D ,0x00 ,0x00 ,(byte)0xFE ,0x00 ,0x00 ,0x02 ,0x00
                ,0x61 ,0x12 ,0x4F ,0x10 ,(byte)0xA0 ,0x00,0x00 ,0x02 ,0x20 ,0x53 ,0x45 ,0x43  ,0x53 ,0x45 ,0x53 ,0x50 ,0x52 ,0x4F ,0x54 ,0x31
                ,0x61 ,0x12 ,0x4F ,0x10 ,(byte)0xA0 ,0x00 ,0x00 ,0x02 ,0x20 ,0x53 ,0x45 ,0x43 ,0x53 ,0x54 ,0x4F ,0x52 ,0x41
                ,0x47 ,0x45 ,0x31 ,0x61 ,0x12 ,0x4F  ,0x10 ,(byte)0xA0 ,0x00 ,0x00 ,0x02 ,0x20 ,0x15 ,0x03 ,0x01 ,0x03 ,0x00 ,0x00 ,0x00 ,0x41 ,0x52 ,0x41 ,0x43
                ,0x61 ,0x0C ,0x4F,0x0A ,(byte)0xA0 ,(byte)0xA1 ,(byte)0xA2 ,(byte)0xA3 ,(byte)0xA4 ,(byte)0xA5 ,(byte)0xA6 ,(byte)0xA7 ,(byte)0xA8 ,(byte)0xA9
                ,0x61 ,0x0C ,0x4F ,0x0A ,(byte)0xA0 ,(byte)0xA1,(byte)0xA2 ,(byte)0xA3 ,(byte)0xA4 ,(byte)0xA5 ,(byte)0xA6 ,(byte)0xA7 ,(byte)0xA8 ,(byte)0xAA
                ,0x61 ,0x12 ,0x4F ,0x10 ,(byte)0xA0 ,0x00 ,0x00 ,0x00 ,0x77 ,0x02 ,0x07 ,0x60 ,0x11 ,0x00 ,0x00 ,(byte)0xFE ,0x00  ,0x00,(byte)0xFE ,0x00
                ,0x61 ,0x0B ,0x4F ,0x09,(byte)0xA0 ,0x00 ,0x00 ,0x01 ,0x51 ,0x43 ,0x52 ,0x53 ,0x00};

        byte parsedArray[][] = parseTLVStream(data);

        assertEquals(17, parsedArray.length );
    }
}